ALTER TABLE CADPROTESTO ADD DIAPROTESTO DATE;

DROP VIEW VCADPROTESTO;

CREATE VIEW VCADPROTESTO(
  CODIGO,
  CODAPRESENTANTE,
  APRESENTANTE,
  CADASTRO,
  CODDEVEDOR,
  DEVEDOR,
  CODFALIMENTAR,
  FALIMENTAR,
  CODMOTIVOPROTESTO,
  MOTIVOPROTESTO,
  NUMTITULO,
  PROTOCOLO,
  CODSTATUS,
  STATUS,
  CODTITULO,
  TITULO,
  CODUSUARIO,
  USUARIO,
  VALORPROTESTO,
  VENCIMENTO,
  SEQPROTOCOLO,
  EDITAL,
  DIAPROTESTO)
AS
SELECT
CADPROTESTO.CODIGO,
CADPROTESTO.APRESENTANTE AS CODAPRESENTANTE,
REGISTROCIVIL.NOME AS APRESENTANTE,
CADPROTESTO.CADASTRO,
CADPROTESTO.DEVEDOR AS CODDEVEDOR,
(SELECT REGISTROCIVIL.NOME FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS DEVEDOR,
CADPROTESTO.FALIMENTAR AS CODFALIMENTAR,
CASE CADPROTESTO.FALIMENTAR WHEN 0 THEN 'SIM'
                            WHEN 1 THEN 'NAO' END AS FALIMENTAR,
CADPROTESTO.MOTIVOPROTESTO AS CODMOTIVOPROTESTO,
MOTIVOPROTESTO.NOME AS MOTIVOPROTESTO,
CADPROTESTO.NUMTITULO,
CADPROTESTO.PROTOCOLO,
CADPROTESTO.STATUS AS CODSTATUS,
CASE CADPROTESTO.STATUS WHEN 0 THEN 'CADASTRADO'
                        WHEN 1 THEN 'AGUARDANDO CONC.'
                        WHEN 2 THEN 'INTIMADO'
                        WHEN 3 THEN 'EDITAL'
                        WHEN 4 THEN 'PROTESTADO' END STATUS,
CADPROTESTO.TITULO AS CODTITULO,
TITULOS.NOME AS TITULO,
CADPROTESTO.USUARIO AS CODUSUARIO,
USUARIOS.USUARIO,
CADPROTESTO.VALORPROTESTO,
CADPROTESTO.VENCIMENTO,
PROTOCOLO.SEQ as SEQPROTOCOLO,
CADPROTESTO.EDITAL,
CADPROTESTO.DIAPROTESTO
FROM CADPROTESTO
INNER JOIN REGISTROCIVIL ON (REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE)
LEFT OUTER JOIN MOTIVOPROTESTO ON (MOTIVOPROTESTO.CODIGO = CADPROTESTO.MOTIVOPROTESTO)
INNER JOIN TITULOS ON (TITULOS.CODIGO = CADPROTESTO.TITULO)
INNER JOIN USUARIOS ON (USUARIOS.CODIGO = CADPROTESTO.USUARIO)
LEFT OUTER JOIN PROTOCOLO ON (PROTOCOLO.CODIGO = CADPROTESTO.PROTOCOLO)
;

CREATE TABLE KITSELO (
  CODIGO INTEGER NOT NULL,
  NOME VARCHAR(100),
  QUANTIDADE INTEGER);
  
  ALTER TABLE KITSELO ADD PRIMARY KEY (CODIGO);
  CREATE GENERATOR GKITSELO;
  SET GENERATOR GKITSELO TO 0;
  CREATE TRIGGER TR_KITSELO FOR KITSELO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CODIGO = 0) THEN
      NEW.CODIGO = GEN_ID(GKITSELO, 1);
END;

CREATE TABLE REGISTROSELO (
  CODIGO INTEGER NOT NULL,
  KITSELO INTEGER NOT NULL,
  QUANTIDADEKIT INTEGER,
  ENTREGA DATE,
  SERIEINI BIGINT,
  SERIEFIM BIGINT);
  
  ALTER TABLE REGISTROSELO ADD PRIMARY KEY (CODIGO);
  CREATE GENERATOR GREGISTROSELO;
  SET GENERATOR GREGISTROSELO TO 0;
  CREATE TRIGGER TR_REGISTROSELO FOR REGISTROSELO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CODIGO = 0) THEN
      NEW.CODIGO = GEN_ID(GREGISTROSELO, 1);
END;

CREATE TABLE REGBOLETO (
  CODIGO INTEGER NOT NULL,
  SERIEINI BIGINT,
  SERIEFIM BIGINT,
  ENTREGA DATE,
  QUANTIDADE INTEGER,
  TIPOBOLETO SMALLINT);
  
  ALTER TABLE REGBOLETO ADD PRIMARY KEY (CODIGO);
  CREATE GENERATOR GREGBOLETO;
  SET GENERATOR GREGBOLETO TO 0;
  CREATE TRIGGER TR_REGBOLETO FOR REGBOLETO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CODIGO = 0) THEN
      NEW.CODIGO = GEN_ID(GREGBOLETO, 1);
END;

CREATE VIEW VREGISTROSELO(
  CODIGO,
  CODKITSELO,
  KITSELO,
  QUANTIDADEKIT,
  ENTREGA,
  SERIEFIM,
  SERIEINI)
AS
SELECT
REGISTROSELO.CODIGO,
REGISTROSELO.KITSELO AS CODKITSELO,
KITSELO.NOME AS KITSELO,
REGISTROSELO.QUANTIDADEKIT,
REGISTROSELO.ENTREGA,
REGISTROSELO.SERIEFIM,
REGISTROSELO.SERIEINI
FROM REGISTROSELO
INNER JOIN KITSELO ON (KITSELO.CODIGO = REGISTROSELO.KITSELO)
;

  ALTER TABLE REGISTROSELO ADD CONSTRAINT FK_REGISTROSELO FOREIGN KEY (KITSELO) REFERENCES KITSELO(CODIGO);
  
  CREATE VIEW VREGBOLETO(
  CODIGO,
  ENTREGA,
  QUANTIDADE,
  SERIEFIM,
  SERIEINI,
  CODTIPOBOLETO,
  TIPOBOLETO)
AS
SELECT
REGBOLETO.CODIGO,
REGBOLETO.ENTREGA,
REGBOLETO.QUANTIDADE,
REGBOLETO.SERIEFIM,
REGBOLETO.SERIEINI,
REGBOLETO.TIPOBOLETO AS CODTIPOBOLETO,
CASE REGBOLETO.TIPOBOLETO WHEN 0 THEN 'FERJ'
                          WHEN 1 THEN 'FERC' END AS TIPOBOLETO
FROM REGBOLETO
;