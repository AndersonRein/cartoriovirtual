ALTER TABLE TITULOS
ALTER COLUMN DESCRICAO
TYPE VARCHAR(1000);

ALTER TABLE TITULOS ADD CHEQUE SMALLINT;

DROP VIEW VCADPROTESTO;

ALTER TABLE INTIMACAO ADD TIPOCUMPRIMENTO SMALLINT;
ALTER TABLE INTIMACAO ADD DATACUMPRIMENTO DATE;

CREATE TRIGGER AUTOGRAFOS_REGCIVIL FOR AUTOGRAFOS
ACTIVE AFTER INSERT
POSITION 0
AS
BEGIN
  INSERT INTO REGISTROCIVIL (CODIGO, NOME, ENDERECO, NUMERO, BAIRRO, NASCIMENTO, RG_IE, CPF_CNPJ, PROFISSAO, NACIONALIDADE, CELULAR, EMAIL, CEP, CIDADE, PESSOA, TELEFONE, ESTADOCIVIL, REGIMECASAMENTO)
  VALUES (0, NEW.NOME, NEW.ENDERECO, NEW.NUMERO, NEW.BAIRRO, NEW.NASCIMENTO, NEW.RG_IE, NEW.CPF_CNPJ, NEW.PROFISSAO, NEW.NACIONALIDADE, NEW.CELULAR, NEW.EMAIL, NEW.CEP, NEW.CIDADE, 0, NEW.TELEFONE, NEW.ESTADOCIVIL, NEW.REGIMECASAMENTO);
END;

ALTER TABLE CADPROTESTO DROP CONSTRAINT FK_CADPROTESTO_APRESENTANTE;
ALTER TABLE CADPROTESTO DROP CONSTRAINT FK_CADPROTESTO_DEVEDOR;
ALTER TABLE PROTOCOLO DROP CONSTRAINT FK_PROTOCOLO_APRESENTANTE;
ALTER TABLE PROTOCOLO DROP CONSTRAINT FK_PROTOCOLO_DEVEDOR;
ALTER TABLE CADPROTESTO ADD CONSTRAINT FK_CADPROTESTO_APRESENTANTE FOREIGN KEY (APRESENTANTE) REFERENCES REGISTROCIVIL(CODIGO);
ALTER TABLE CADPROTESTO ADD CONSTRAINT FK_CADPROTESTO_DEVEDOR FOREIGN KEY (DEVEDOR) REFERENCES REGISTROCIVIL(CODIGO);
ALTER TABLE PROTOCOLO ADD CONSTRAINT FK_PROTOCOLO_DEVEDOR FOREIGN KEY (DEVEDOR) REFERENCES REGISTROCIVIL(CODIGO);
ALTER TABLE PROTOCOLO ADD CONSTRAINT FK_PROTOCOLO_APRESENTANTE FOREIGN KEY (APRESENTANTE) REFERENCES REGISTROCIVIL(CODIGO);


CREATE TABLE PROTESTO (
  CODIGO INTEGER NOT NULL,
  CADPROTESTO INTEGER NOT NULL,
  DATA DATE DEFAULT CURRENT_DATE,
  SELO VARCHAR(100),
  STATUS SMALLINT DEFAULT 0);
  
  ALTER TABLE PROTESTO ADD PRIMARY KEY (CODIGO);
  
  SET GENERATOR GPROTESTO TO 0;
  
  CREATE TRIGGER TR_PROTESTO FOR PROTESTO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CODIGO = 0) THEN
      NEW.CODIGO = GEN_ID(GPROTESTO, 1);
END;

ALTER TABLE PROTESTO ADD CONSTRAINT FK_PROTESTO FOREIGN KEY (CADPROTESTO) REFERENCES CADPROTESTO(CODIGO);
ALTER TABLE CADPROTESTO ADD EDITAL INTEGER;

CREATE TRIGGER INTIMACAO_EDITAL FOR INTIMACAO
ACTIVE AFTER UPDATE
POSITION 0
AS
BEGIN
  IF (NEW.TIPOCUMPRIMENTO > 1) THEN
  UPDATE CADPROTESTO SET CADPROTESTO.EDITAL = (SELECT COALESCE(MAX(CADPROTESTO.EDITAL),0) + 1 FROM CADPROTESTO) WHERE CADPROTESTO.CODIGO = NEW.PROTESTO;
END;

CREATE VIEW VCADPROTESTO(
  CODIGO,
  CODAPRESENTANTE,
  APRESENTANTE,
  CADASTRO,
  CODDEVEDOR,
  DEVEDOR,
  CODFALIMENTAR,
  FALIMENTAR,
  CODMOTIVOPROTESTO,
  MOTIVOPROTESTO,
  NUMTITULO,
  PROTOCOLO,
  CODSTATUS,
  STATUS,
  CODTITULO,
  TITULO,
  CODUSUARIO,
  USUARIO,
  VALORPROTESTO,
  VENCIMENTO,
  SEQPROTOCOLO,
  EDITAL)
AS
SELECT
CADPROTESTO.CODIGO,
CADPROTESTO.APRESENTANTE AS CODAPRESENTANTE,
REGISTROCIVIL.NOME AS APRESENTANTE,
CADPROTESTO.CADASTRO,
CADPROTESTO.DEVEDOR AS CODDEVEDOR,
(SELECT REGISTROCIVIL.NOME FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS DEVEDOR,
CADPROTESTO.FALIMENTAR AS CODFALIMENTAR,
CASE CADPROTESTO.FALIMENTAR WHEN 0 THEN 'SIM'
                            WHEN 1 THEN 'NAO' END AS FALIMENTAR,
CADPROTESTO.MOTIVOPROTESTO AS CODMOTIVOPROTESTO,
MOTIVOPROTESTO.NOME AS MOTIVOPROTESTO,
CADPROTESTO.NUMTITULO,
CADPROTESTO.PROTOCOLO,
CADPROTESTO.STATUS AS CODSTATUS,
CASE CADPROTESTO.STATUS WHEN 0 THEN 'CADASTRADO'
                        WHEN 1 THEN 'AGUARDANDO CONC.'
                        WHEN 2 THEN 'INTIMADO'
                        WHEN 3 THEN 'EDITAL'
                        WHEN 4 THEN 'PROTESTADO' END STATUS,
CADPROTESTO.TITULO AS CODTITULO,
TITULOS.NOME AS TITULO,
CADPROTESTO.USUARIO AS CODUSUARIO,
USUARIOS.USUARIO,
CADPROTESTO.VALORPROTESTO,
CADPROTESTO.VENCIMENTO,
PROTOCOLO.SEQ as SEQPROTOCOLO,
CADPROTESTO.EDITAL
FROM CADPROTESTO
INNER JOIN REGISTROCIVIL ON (REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE)
LEFT OUTER JOIN MOTIVOPROTESTO ON (MOTIVOPROTESTO.CODIGO = CADPROTESTO.MOTIVOPROTESTO)
INNER JOIN TITULOS ON (TITULOS.CODIGO = CADPROTESTO.TITULO)
INNER JOIN USUARIOS ON (USUARIOS.CODIGO = CADPROTESTO.USUARIO)
LEFT OUTER JOIN PROTOCOLO ON (PROTOCOLO.CODIGO = CADPROTESTO.PROTOCOLO)
;

DROP VIEW VINTIMACAO;

CREATE VIEW VINTIMACAO(
  CODIGO,
  CODACEITE,
  ACEITE,
  CONCLUSAO,
  DATA,
  PROTESTO,
  COD_APRESENTANTE,
  APRESENTANTE,
  CPF_CNPJ_APRESENTANTE,
  END_APRESENTANTE,
  NUM_APRESENTANTE,
  BAIRRO_APRESENTANTE,
  COD_CIDADE_APRESENTANTE,
  CIDADE_APRESENTANTE,
  UF_APRESENTANTE,
  COD_DEVEDOR,
  DEVEDOR,
  CPF_CNPJ_DEVEDOR,
  END_DEVEDOR,
  NUM_DEVEDOR,
  BAIRRO_DEVEDOR,
  COD_CIDADE_DEVEDOR,
  CIDADE_DEVEDOR,
  UF_DEVEDOR,
  PROTOCOLO,
  SEQPROTOCOLO,
  SELO1,
  SELO2,
  CODSTATUS,
  STATUS,
  VALORPROTESTO,
  VENCIMENTO,
  NUMTITULO,
  TITULO,
  TIPOCUMPRIMENTO)
AS
SELECT
INTIMACAO.CODIGO,
INTIMACAO.ACEITE AS CODACEITE,
CASE INTIMACAO.ACEITE WHEN 0 THEN 'SIM'
                      WHEN 1 THEN 'NAO' END AS ACEITE,
INTIMACAO.CONCLUSAO,
INTIMACAO.DATA,
INTIMACAO.PROTESTO,
(SELECT REGISTROCIVIL.CODIGO FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE) AS COD_APRESENTANTE,
(SELECT REGISTROCIVIL.NOME FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE) AS APRESENTANTE,
(SELECT REGISTROCIVIL.CPF_CNPJ FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE) AS CPF_CNPJ_APRESENTANTE,
(SELECT REGISTROCIVIL.ENDERECO FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE) AS END_APRESENTANTE,
(SELECT REGISTROCIVIL.NUMERO FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE) AS NUM_APRESENTANTE,
(SELECT REGISTROCIVIL.BAIRRO FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE) AS BAIRRO_APRESENTANTE,
(SELECT REGISTROCIVIL.CIDADE FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE) AS COD_CIDADE_APRESENTANTE,
(SELECT CIDADE.NOME FROM CIDADE INNER JOIN REGISTROCIVIL ON (REGISTROCIVIL.CIDADE = CIDADE.CODIGO AND REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE)) AS CIDADE_APRESENTANTE,
(SELECT CIDADE.UF FROM CIDADE INNER JOIN REGISTROCIVIL ON (REGISTROCIVIL.CIDADE = CIDADE.CODIGO AND REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE)) AS UF_APRESENTANTE,
(SELECT REGISTROCIVIL.CODIGO FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS COD_DEVEDOR,
(SELECT REGISTROCIVIL.NOME FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS DEVEDOR,
(SELECT REGISTROCIVIL.CPF_CNPJ FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS CPF_CNPJ_DEVEDOR,
(SELECT REGISTROCIVIL.ENDERECO FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS END_DEVEDOR,
(SELECT REGISTROCIVIL.NUMERO FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS NUM_DEVEDOR,
(SELECT REGISTROCIVIL.BAIRRO FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS BAIRRO_DEVEDOR,
(SELECT REGISTROCIVIL.CIDADE FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = CADPROTESTO.DEVEDOR) AS COD_CIDADE_DEVEDOR,
(SELECT CIDADE.NOME FROM CIDADE INNER JOIN REGISTROCIVIL ON (REGISTROCIVIL.CIDADE = CIDADE.CODIGO AND REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE)) AS CIDADE_DEVEDOR,
(SELECT CIDADE.UF FROM CIDADE INNER JOIN REGISTROCIVIL ON (REGISTROCIVIL.CIDADE = CIDADE.CODIGO AND REGISTROCIVIL.CODIGO = CADPROTESTO.APRESENTANTE)) AS UF_DEVEDOR,
INTIMACAO.PROTOCOLO,
PROTOCOLO.SEQ AS SEQPROTOCOLO,
INTIMACAO.SELO1,
INTIMACAO.SELO2,
INTIMACAO.STATUS AS CODSTATUS,
CASE INTIMACAO.STATUS WHEN 0 THEN 'ATIVO'
                      WHEN 1 THEN 'CENCELADO' END AS STATUS,
CADPROTESTO.VALORPROTESTO,
CADPROTESTO.VENCIMENTO,
CADPROTESTO.NUMTITULO,
TITULOS.NOME AS TITULO,
INTIMACAO.TIPOCUMPRIMENTO
FROM INTIMACAO
INNER JOIN CADPROTESTO ON (CADPROTESTO.CODIGO = INTIMACAO.PROTESTO)
LEFT OUTER JOIN PROTOCOLO ON (PROTOCOLO.CODIGO = INTIMACAO.PROTOCOLO)
LEFT OUTER JOIN TITULOS ON (TITULOS.CODIGO = CADPROTESTO.TITULO)
;

ALTER TABLE PROTESTO ADD ACEITE SMALLINT;

CREATE VIEW VPROTOCOLO(
  CODIGO,
  CODAPRESENTANTE,
  APRESENTANTE,
  TITULO,
  VENCIMENTO,
  VALORPROTESTO,
  DEVEDOR,
  CPF_CNPJ,
  DATA,
  INTIMACAO,
  COMPRIMENTO,
  CODOCORRENCIA,
  OCORENCIA,
  SEQ,
  FUNCIONARIO,
  FUNCAO,
  MOVIMENTO)
AS
SELECT
PROTOCOLO.CODIGO,
PROTOCOLO.APRESENTANTE AS CODAPRESENTANTE,
REGISTROCIVIL.NOME AS APRESENTANTE,
TITULOS.NOME AS TITULO,
CADPROTESTO.VENCIMENTO,
CADPROTESTO.VALORPROTESTO,
(SELECT REGISTROCIVIL.NOME FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = PROTOCOLO.DEVEDOR) AS DEVEDOR,
(SELECT REGISTROCIVIL.CPF_CNPJ FROM REGISTROCIVIL WHERE REGISTROCIVIL.CODIGO = PROTOCOLO.DEVEDOR) AS CPF_CNPJ,
PROTOCOLO.DATA,
PROTOCOLO.INTIMACAO,
PROTOCOLO.COMPRIMENTO,
PROTOCOLO.OCORRENCIA AS CODOCORENCIA,
OCORENCIA.NOME AS OCORENCIA,
PROTOCOLO.SEQ,
FUNCIONARIOS.NOME AS FUNCIONARIO,
FUNCIONARIOS.FUNCAO,
PROTOCOLO.MOVIMENTO
FROM PROTOCOLO
LEFT OUTER JOIN REGISTROCIVIL ON (REGISTROCIVIL.CODIGO = PROTOCOLO.APRESENTANTE)
LEFT OUTER JOIN INTIMACAO ON (INTIMACAO.CODIGO = PROTOCOLO.INTIMACAO)
LEFT OUTER JOIN CADPROTESTO ON (CADPROTESTO.CODIGO = INTIMACAO.PROTESTO)
LEFT OUTER JOIN TITULOS ON (TITULOS.CODIGO = CADPROTESTO.TITULO)
LEFT OUTER JOIN OCORENCIA ON (OCORENCIA.CODIGO = PROTOCOLO.OCORRENCIA)
LEFT OUTER JOIN USUARIOS ON (USUARIOS.CODIGO = PROTOCOLO.USUARIO)
LEFT OUTER JOIN FUNCIONARIOS ON (FUNCIONARIOS.CODIGO = USUARIOS.FUNCIONARIO)
;

CREATE TABLE CALENDARIO (
  CODIGO INTEGER NOT NULL,
  NOME VARCHAR(100),
  DIA DATE,
  ANUAL SMALLINT);
  
ALTER TABLE CALENDARIO ADD PRIMARY KEY (CODIGO);
CREATE GENERATOR GCALENDARIO;
SET GENERATOR GCALENDARIO TO 0;

CREATE TRIGGER TR_CALENDARIO FOR CALENDARIO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CODIGO = 0) THEN
      NEW.CODIGO = GEN_ID(GCALENDARIO, 1);
END;

ALTER TABLE INTIMACAO ADD FERJ INTEGER;
ALTER TABLE PROTESTO ADD FERJ INTEGER;
ALTER TABLE AUTOGRAFOS ADD SEXO CHAR(1);

CREATE TABLE EMOLUMENTOS (
  CODIGO INTEGER NOT NULL,
  GRUPOLEI SMALLINT,
  TIPOATO VARCHAR(1000),
  LEI VARCHAR(100),
  ATOGERAL CHAR(1),
  ATOFIXO CHAR(1),
  TIPOSELO INTEGER,
  VALOR NUMERIC(12, 2),
  EDITAVEL CHAR(1),
  ATIVO CHAR(1),
  VLRTRANSACAO NUMERIC(12, 2));
  
  ALTER TABLE EMOLUMENTOS ADD PRIMARY KEY (CODIGO);
  
  CREATE GENERATOR GEMOLUMENTOS;
  SET GENERATOR GEMOLUMENTOS TO 0;
  CREATE TRIGGER TR_EMOLUMENTOS FOR EMOLUMENTOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CODIGO = 0) THEN
      NEW.CODIGO = GEN_ID(GEMOLUMENTOS, 1);
END;

CREATE VIEW VEMOLUMENTOS(
  CODIGO,
  GRUPOLEI,
  TIPOATO,
  LEI,
  ATOGERAL,
  ATOFIXO,
  TIPOSELO,
  VALOR,
  EDITAVEL,
  ATIVO,
  VLRTRANSACAO)
AS
SELECT * FROM EMOLUMENTOS
;

CREATE TABLE CAIXATABNOTAS (
  CODIGO INTEGER NOT NULL,
  DATA DATE DEFAULT CURRENT_DATE,
  LEI VARCHAR(100),
  SELO VARCHAR(20),
  TIPOSELO INTEGER,
  ATO INTEGER,
  LIVRO INTEGER,
  FOLHA INTEGER,
  VLRTRANSACAO NUMERIC(12, 2),
  VALOR NUMERIC(12, 2),
  FERJ INTEGER,
  FERC INTEGER,
  TOTAL NUMERIC(12, 2),
  FORMAPAG VARCHAR(20),
  CLIENTE INTEGER,
  VLRCOBRADO NUMERIC(12, 2),
  OBS VARCHAR(500));
  
  ALTER TABLE CAIXATABNOTAS ADD PRIMARY KEY (CODIGO);
  
  CREATE GENERATOR GCAIXATABNOTAS;
  SET GENERATOR GCAIXATABNOTAS TO 0;
  CREATE TRIGGER BI_CAIXATABNOTAS_CODIGO FOR CAIXATABNOTAS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CODIGO = 0) THEN
      NEW.CODIGO = GEN_ID(GCAIXATABNOTAS, 1);
END;

ALTER TABLE CAIXATABNOTAS ADD CONSTRAINT FK_CAIXATABNOTAS FOREIGN KEY (CLIENTE) REFERENCES REGISTROCIVIL(CODIGO);

CREATE VIEW VCAIXATABNOTAS(
  CODIGO,
  DATA,
  LEI,
  SELO,
  TIPOSELO,
  ATO,
  LIVRO,
  FOLHA,
  VLRTRANSACAO,
  VALOR,
  FERJ,
  FERC,
  TOTAL,
  FORMAPAG,
  CODCLIENTE,
  CLIENTE,
  VLRCOBRADO,
  OBS)
AS
SELECT
CAIXATABNOTAS.CODIGO,
CAIXATABNOTAS.DATA,
CAIXATABNOTAS.LEI,
CAIXATABNOTAS.SELO,
CAIXATABNOTAS.TIPOSELO,
CAIXATABNOTAS.ATO,
CAIXATABNOTAS.LIVRO,
CAIXATABNOTAS.FOLHA,
CAIXATABNOTAS.VLRTRANSACAO,
CAIXATABNOTAS.VALOR,
CAIXATABNOTAS.FERJ,
CAIXATABNOTAS.FERC,
CAIXATABNOTAS.TOTAL,
CAIXATABNOTAS.FORMAPAG,
CAIXATABNOTAS.CLIENTE AS CODCLIENTE,
REGISTROCIVIL.NOME AS CLIENTE,
CAIXATABNOTAS.VLRCOBRADO,
CAIXATABNOTAS.OBS
FROM CAIXATABNOTAS
LEFT OUTER JOIN REGISTROCIVIL ON (REGISTROCIVIL.CODIGO = CAIXATABNOTAS.CLIENTE)
;